{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction MarvelSnapDeckRandomiserComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction MarvelSnapDeckRandomiserComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Energy\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Power\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\")(10, \"tr\")(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"td\");\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵtextInterpolate(ctx_r1.deck.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.deck.energy);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.deck.power);\n  }\n}\nexport class MarvelSnapDeckRandomiserComponent {\n  constructor(http, baseUrl) {\n    this.deck = {};\n    http.get(baseUrl + 'deck').subscribe(result => {\n      this.deck = result;\n    }, error => console.error(error));\n  }\n}\nMarvelSnapDeckRandomiserComponent.ɵfac = function MarvelSnapDeckRandomiserComponent_Factory(t) {\n  return new (t || MarvelSnapDeckRandomiserComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nMarvelSnapDeckRandomiserComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MarvelSnapDeckRandomiserComponent,\n  selectors: [[\"app-marvel-snap-deck-randomiser\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"]],\n  template: function MarvelSnapDeckRandomiserComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Marvel Snap Deck Randomiser\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, MarvelSnapDeckRandomiserComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, MarvelSnapDeckRandomiserComponent_table_5_Template, 17, 3, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.deck);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.deck);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAAiB;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAGpCA,gCAA6E;IAGnEA,oBAAI;IAAAA,iBAAK;IACbA,0BAAI;IAAAA,sBAAM;IAAAA,iBAAK;IACfA,0BAAI;IAAAA,qBAAK;IAAAA,iBAAK;IAGlBA,6BAAO;IAECA,aAAe;IAAAA,iBAAK;IACxBA,2BAAI;IAAAA,aAAiB;IAAAA,iBAAK;IAC1BA,2BAAI;IAAAA,aAAgB;IAAAA,iBAAK;;;;IAFrBA,gBAAe;IAAfA,sCAAe;IACfA,eAAiB;IAAjBA,wCAAiB;IACjBA,eAAgB;IAAhBA,uCAAgB;;;ACZ1B,OAAM,MAAOC,iCAAiC;EAG5CC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,SAAI,GAAS,EAAU;IAG5BD,IAAI,CAACE,GAAG,CAAOD,OAAO,GAAG,MAAM,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAClD,IAAI,CAACC,IAAI,GAAGD,MAAM;IACpB,CAAC,EAAEE,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAPWR,iCAAiC;mBAAjCA,iCAAiC,4DAGN,UAAU;AAAA;AAHrCA,iCAAiC;QAAjCA,iCAAiC;EAAAU;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP9Cf,6BAAoB;MAAAA,2CAA2B;MAAAA,iBAAK;MAEpDA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,8EAAwC;MAGxCA,uFAeQ;;;MAlBJA,eAAW;MAAXA,gCAAW;MAGkDA,eAAU;MAAVA,+BAAU","names":["i0","MarvelSnapDeckRandomiserComponent","constructor","http","baseUrl","get","subscribe","result","deck","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\caleb\\Documents\\GitHub\\MarvelSnapDeckRandomiser\\ClientApp\\src\\app\\marvel-snap-deck-randomiser\\marvel-snap-deck-randomiser.component.html","C:\\Users\\caleb\\Documents\\GitHub\\MarvelSnapDeckRandomiser\\ClientApp\\src\\app\\marvel-snap-deck-randomiser\\marvel-snap-deck-randomiser.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Marvel Snap Deck Randomiser</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!deck\"><em>Loading...</em></p>\r\n\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"deck\">\r\n  <thead>\r\n    <tr>\r\n      <th>Name</th>\r\n      <th>Energy</th>\r\n      <th>Power</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ deck.name }}</td>\r\n      <td>{{ deck.energy }}</td>\r\n      <td>{{ deck.power }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-marvel-snap-deck-randomiser',\r\n  templateUrl: './marvel-snap-deck-randomiser.component.html'\r\n})\r\nexport class MarvelSnapDeckRandomiserComponent {\r\n  public deck: Deck = {} as Deck;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Deck>(baseUrl + 'deck').subscribe(result => {\r\n      this.deck = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Deck {\r\n  name: string;\r\n  energy: number;\r\n  power: number;\r\n  picUrl: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}